#!/usr/bin/perl
#
# sumEvenFibonacci.pl
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.
#
use strict;
use warnings;

# expects one parameter and returns it if number is even, else returns 0
sub isEven {
  my $num = shift;
  return $num % 2 == 0 ? $num : 0;
}

my $maxFibonacciNum = 4000000;

my $sumEvenFibonacci = 0;

my ($num1, $num2) = (1, 1);

my $num3 = $num1 + $num2;

while ($num3 <= $maxFibonacciNum) {
  # if $num3 is even then add it to the sum
  $sumEvenFibonacci += isEven($num3);

  # swap the numbers
  $num1 = $num2;
  $num2 = $num3;

  $num3 = $num1 + $num2;
  
}
print "Sum of even Fibonacci less than equal to 4 million: ", $sumEvenFibonacci, "\n";
